'use strict'

/*
Задача № 1. Пункты телепортации заказов.
Мы хотим запустить на нашем сайте сервис, который позволяет пользователю найти ближайший к нему пункт телепортации заказов.

Для этого нужно создать конструктор и прототип для пункта телепортации, который упростит их поиск. Экземпляр должен иметь название и координаты. А также метод, позволяющий вычислить расстояние до него.

Описание конструктора и экземпляра
Конструктор
Принимает четыре аргумента:

title — название пункта, строка;
x, y и z — координаты, числа.
Экземпляр
Имеет всего один метод:

getDistance
принимает три координаты точки x, y и z и возвращает расстояние от этой точки до расположения пункта телепортации.
Пример использования

const point = new OrdersTeleportationPoint('Темная сторона Луны', 500, 200, 97);
let distance = point.getDistance(100, -100, 33);
console.log(`Расстояние до пункта «${point.title}» составит ${distance.toFixed(0)} единиц`);
Если все реализовано верно, вы получите такой вывод:


Расстояние до пункта «Темная сторона Луны» составит 504 единиц
Процесс реализации
Создайте конструктор OrdersTeleportationPoint. Сохраните в экземпляр название и координаты.
Реализуйте метод getDistance.
Проверьте работу вашего кода на примере использования. Также протестируйте его, используя свои примеры.

*/

class OrdersTeleportationPoint {
    constructor(title, x, y, z) {
        this.title = title;
        this.x = x;
        this.y = y;
        this.z = z;
    }

    getDistance(x, y, z){
        return Math.sqrt(Math.pow((this.x - x), 2) + Math.pow((this.y - y), 2) + Math.pow((this.z - z), 2));
    }
}

const point = new OrdersTeleportationPoint('Темная сторона Луны', 500, 200, 97);
let distance = point.getDistance(100, -100, 33);
console.log(`Расстояние до пункта «${point.title}» составит ${distance.toFixed(0)} единиц`);